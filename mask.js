// Generated by CoffeeScript 1.9.2
var $, CLASS_NAME, DEFAULT_MASK_STYLE, DOC, MASK_ANIMATE_TIME, Mask, WIN, elBody, elHtml, entry, getMax;

WIN = window;

DOC = document;

$ = WIN.$;

elBody = $("body");

elHtml = $("html");

CLASS_NAME = "wallet-mask";

MASK_ANIMATE_TIME = 300;

DEFAULT_MASK_STYLE = {
  left: 0,
  top: 0,
  right: 0,
  width: "100%",
  background: "rgba(0, 0, 0, .6)",
  zIndex: 10,
  position: "absolute",
  display: "none"
};

getMax = require("../get_max/get_max.js");

Mask = (function() {
  function Mask(params) {
    var animate, style, trans;
    if (params == null) {
      params = {};
    }
    style = params.style, animate = params.animate;
    $.extend(this, params);
    this.params = params;
    style = style || {};
    if (typeof animate === "undefined") {
      animate = true;
    }
    this.animate = animate;
    if (animate) {
      trans = "all " + (this.animateTime || MASK_ANIMATE_TIME) + "ms ease";
      $.extend(style, {
        webkitTransition: trans,
        transition: trans,
        opacity: 0
      });
    }
    style = $.extend(DEFAULT_MASK_STYLE, style);
    this.style = style;
  }

  Mask.prototype.init = function() {
    var elMask, html;
    html = "<div class='" + CLASS_NAME + "'></div>";
    elMask = this.el = $(html);
    elMask.css(this.style);
    elBody.append(elMask);
    elMask.on("touchmove mousemove", function(e) {
      e.preventDefault();
      return false;
    });
    return this;
  };

  Mask.prototype.show = function() {
    var el, winHeight;
    el = this.el;
    winHeight = getMax([$(WIN).height(), elHtml.height(), elBody.height()]);
    el.height(winHeight);
    el.show();
    if (this.animate) {
      setTimeout(function() {
        return el.css("opacity", 1);
      }, 10);
    }
    return this;
  };

  Mask.prototype.hide = function() {
    var el;
    el = this.el;
    if (this.animate) {
      el.css("opacity", 0).hide();
    } else {
      el.hide();
    }
    return this;
  };

  Mask.prototype.destroy = function() {
    this.el.remove();
    return this;
  };

  return Mask;

})();

entry = function(params) {
  return (new Mask(params)).init();
};

module.exports = entry;
